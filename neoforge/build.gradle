plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.11'
}

version = mod_version
group = mod_group_id

repositories { mavenCentral() }

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

dependencies {
    implementation project(":common")
}

base { archivesName = mod_id }

neoForge {
    version = neo_version
    validateAccessTransformers = true

    runs {
        client { client(); systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id }
        server { server(); systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id; programArgument '--nogui' }
        data { data(); programArguments = ['--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').absolutePath, '--existing', file('src/main/resources/').absolutePath] }
    }

    mods { "${mod_id}" { sourceSet sourceSets.main } }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/neoforge.mods.toml']) { expand replaceProperties }
}

publishing {
    publications { register('mavenJava', MavenPublication) { from components.java } }
}

tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }

// Include LICENSE in the produced jar (parity with Fabric)
tasks.named('jar') {
    from(rootProject.file('LICENSE')) {
        rename { name -> "${name}_${project.base.archivesName.get()}" }
    }
}
